[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "",
    "text": "note that we create a new variable ‘time_years’ where we divide the time into years.\n\n\nlibrary(survival)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Load lung cancer data\ndata(lung)\nlung_clean &lt;- lung %&gt;% \n  filter(!is.na(time)) %&gt;%\n  mutate(time_years = time / 365.25)\n\n# Create Kaplan-Meier estimate\nsurv_obj &lt;- Surv(lung_clean$time_years, lung_clean$status - 1)\nkm_fit &lt;- survfit(surv_obj ~ 1)\n\nprint(paste(\"Sample size:\", length(lung_clean$time_years)))\n\n[1] \"Sample size: 228\"\n\nprint(paste(\"Number of deaths:\", sum(lung_clean$status == 2)))\n\n[1] \"Number of deaths: 165\""
  },
  {
    "objectID": "index.html#load-data-and-create-kaplan-meier-curve",
    "href": "index.html#load-data-and-create-kaplan-meier-curve",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "",
    "text": "note that we create a new variable ‘time_years’ where we divide the time into years.\n\n\nlibrary(survival)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Load lung cancer data\ndata(lung)\nlung_clean &lt;- lung %&gt;% \n  filter(!is.na(time)) %&gt;%\n  mutate(time_years = time / 365.25)\n\n# Create Kaplan-Meier estimate\nsurv_obj &lt;- Surv(lung_clean$time_years, lung_clean$status - 1)\nkm_fit &lt;- survfit(surv_obj ~ 1)\n\nprint(paste(\"Sample size:\", length(lung_clean$time_years)))\n\n[1] \"Sample size: 228\"\n\nprint(paste(\"Number of deaths:\", sum(lung_clean$status == 2)))\n\n[1] \"Number of deaths: 165\""
  },
  {
    "objectID": "index.html#compare-different-exponential-models",
    "href": "index.html#compare-different-exponential-models",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "2 Compare Different Exponential Models",
    "text": "2 Compare Different Exponential Models\n\n# Time points for plotting exponential curves\ntime_grid &lt;- seq(0, 3, length.out = 200)\n\n# Try different lambda values\nlambda_values &lt;- c(0, 0.3, 0.6, 0.9, 1, 1.2, 1.8)\n\n# Create plot data\nplot_data &lt;- data.frame()\nfor(lambda in lambda_values) {\n  temp_data &lt;- data.frame(\n    time = time_grid,\n    survival = exp(-lambda * time_grid),\n    lambda = paste(\"λ =\", lambda)\n  )\n  plot_data &lt;- rbind(plot_data, temp_data)\n}\n\n# Extract KM data\nkm_data &lt;- data.frame(\n  time = km_fit$time,\n  survival = km_fit$surv\n)\n\n# Create the comparison plot\nggplot() +\n  # Kaplan-Meier curve (observed data)\n  geom_step(data = km_data, \n            aes(x = time, y = survival), \n            color = \"black\", linewidth = 2.5, alpha = 0.8) +\n  \n  # Different exponential models\n  geom_line(data = plot_data, \n            aes(x = time, y = survival, color = lambda), \n            linewidth = 1.5) +\n  \n  xlim(0, 3) + ylim(0, 1) +\n  labs(\n    title = \"Observed Survival vs Exponential Models\",\n    subtitle = \"Black line = Observed data (Kaplan-Meier)\",\n    x = \"Time (years)\",\n    y = \"Survival Probability\",\n    color = \"Exponential Models\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 12),\n    legend.position = \"right\",\n    legend.title = element_text(face = \"bold\")\n  )"
  },
  {
    "objectID": "index.html#side-by-side-comparison",
    "href": "index.html#side-by-side-comparison",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "3 Side-by-Side Comparison",
    "text": "3 Side-by-Side Comparison\n\n# Create individual plots for each lambda\nplots &lt;- list()\n\nfor(i in 1:length(lambda_values)) {\n  lambda &lt;- lambda_values[i]\n  exp_data &lt;- data.frame(\n    time = time_grid,\n    survival = exp(-lambda * time_grid)\n  )\n  \n  p &lt;- ggplot() +\n    geom_step(data = km_data, \n              aes(x = time, y = survival), \n              color = \"black\", linewidth = 2) +\n    geom_line(data = exp_data, \n              aes(x = time, y = survival), \n              color = \"red\", linewidth = 1.5, linetype = \"dashed\") +\n    xlim(0, 3) + ylim(0, 1) +\n    labs(title = paste(\"λ =\", lambda),\n         x = \"Time (years)\", y = \"Survival\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, face = \"bold\"))\n  \n  plots[[i]] &lt;- p\n}\n\n# Arrange plots\nlibrary(gridExtra)\ndo.call(grid.arrange, c(plots, ncol = 3))"
  },
  {
    "objectID": "index.html#summary",
    "href": "index.html#summary",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "4 Summary",
    "text": "4 Summary\nFrom these plots we can see:\n\nλ = 0.3: Too small - curve drops too slowly, overestimates long-term survival\nλ = 0.6: Decent - follows the general trend but a bit optimistic\n\nλ = 0.9: Good fit - closely matches the observed curve\nλ = 1.2: Decent - slightly pessimistic but reasonable\nλ = 1.8: Too large - drops too quickly, underestimates survival\n\nThe exponential model S(t) = exp(-λt) provides a simple way to model survival, but finding the right λ value is crucial for a good fit to the data!"
  },
  {
    "objectID": "index.html#finding-the-best-lambda-using-maximum-likelihood",
    "href": "index.html#finding-the-best-lambda-using-maximum-likelihood",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "5 Finding the Best Lambda Using Maximum Likelihood",
    "text": "5 Finding the Best Lambda Using Maximum Likelihood\nNow let’s use mathematics to find the optimal λ value and see how it compares to our visual assessment:\n\n# Prepare data for MLE calculation\nlung_clean &lt;- lung_clean %&gt;%\n  mutate(event = status - 1)  # Convert to 0/1 coding\n\ntimes &lt;- lung_clean$time_years\nevents &lt;- lung_clean$event\n\n# Calculate key statistics for MLE\nn &lt;- length(times)\nd &lt;- sum(events)  # number of deaths\ntotal_time &lt;- sum(times)  # sum of all observed times\n\ncat(\"=== Data Summary for MLE ===\\n\")\n\n=== Data Summary for MLE ===\n\ncat(\"Sample size (n):\", n, \"\\n\")\n\nSample size (n): 228 \n\ncat(\"Number of deaths (d):\", d, \"\\n\") \n\nNumber of deaths (d): 165 \n\ncat(\"Number censored:\", n - d, \"\\n\")\n\nNumber censored: 63 \n\ncat(\"Total observed time:\", round(total_time, 2), \"person-years\\n\\n\")\n\nTotal observed time: 190.54 person-years\n\n# Test many lambda values to find the best one\ntest_lambdas &lt;- seq(0.1, 2.0, by = 0.05)  # More fine-grained search\n\nresults &lt;- data.frame()\nfor(lam in test_lambdas) {\n  # Log-likelihood formula: d * log(λ) - λ * Σt_i\n  ll &lt;- d * log(lam) - lam * total_time\n  results &lt;- rbind(results, data.frame(\n    lambda = lam,\n    log_likelihood = ll\n  ))\n}\n\n# Find the best lambda\nbest_result &lt;- results[which.max(results$log_likelihood), ]\nbest_lambda &lt;- best_result$lambda\nbest_ll &lt;- best_result$log_likelihood\n\ncat(\"=== Search Results ===\\n\")\n\n=== Search Results ===\n\ncat(\"Best λ from search:\", best_lambda, \"\\n\")\n\nBest λ from search: 0.85 \n\ncat(\"Log-likelihood at best λ:\", round(best_ll, 2), \"\\n\")\n\nLog-likelihood at best λ: -188.77 \n\n# Compare with our visual guesses\nvisual_lambdas &lt;- c(0.3, 0.6, 0.9, 1.2, 1.8)\ncat(\"\\n=== How Our Visual Guesses Compare ===\\n\")\n\n\n=== How Our Visual Guesses Compare ===\n\nfor(lam in visual_lambdas) {\n  ll &lt;- d * log(lam) - lam * total_time\n  diff &lt;- best_ll - ll\n  cat(\"λ =\", lam, \": Log-likelihood =\", round(ll, 2), \n      \", Difference from best:\", round(diff, 2), \"\\n\")\n}\n\nλ = 0.3 : Log-likelihood = -255.82 , Difference from best: 67.05 \nλ = 0.6 : Log-likelihood = -198.61 , Difference from best: 9.84 \nλ = 0.9 : Log-likelihood = -188.87 , Difference from best: 0.1 \nλ = 1.2 : Log-likelihood = -198.56 , Difference from best: 9.79 \nλ = 1.8 : Log-likelihood = -245.98 , Difference from best: 57.21"
  },
  {
    "objectID": "index.html#plot-likelihood-function",
    "href": "index.html#plot-likelihood-function",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "6 Plot: Likelihood Function",
    "text": "6 Plot: Likelihood Function\nLet’s visualize how the likelihood changes across different λ values:\n\n# Create the likelihood plot\nggplot(results, aes(x = lambda, y = log_likelihood)) +\n  geom_line(color = \"blue\", linewidth = 1.2) +\n  geom_point(color = \"blue\", size = 1, alpha = 0.6) +\n  \n  # Mark the optimal lambda\n  geom_point(aes(x = best_lambda, y = best_ll), \n             color = \"red\", size = 4, shape = 17) +\n  geom_vline(xintercept = best_lambda, color = \"red\", \n             linetype = \"dashed\", alpha = 0.7) +\n  \n  # Mark our visual lambda guesses\n  geom_vline(data = data.frame(lam = visual_lambdas), \n             aes(xintercept = lam), \n             color = \"gray\", linetype = \"dotted\", alpha = 0.8) +\n  \n  labs(\n    title = \"Log-Likelihood Function for Different λ Values\",\n    subtitle = paste(\"Red triangle = Optimal λ (\", best_lambda, \"), Gray lines = Visual guesses\", sep=\"\"),\n    x = \"Lambda (λ)\",\n    y = \"Log-Likelihood\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5)\n  )\n\n\n\n# Add some annotations for the visual guesses\ncat(\"\\n=== Visual Assessment vs Mathematical Optimum ===\\n\")\n\n\n=== Visual Assessment vs Mathematical Optimum ===\n\ncat(\"Our visual 'good fit' was λ = 0.9\\n\")\n\nOur visual 'good fit' was λ = 0.9\n\ncat(\"Mathematical optimum is λ =\", best_lambda, \"\\n\")\n\nMathematical optimum is λ = 0.85 \n\ncat(\"Difference:\", round(abs(0.9 - best_lambda), 3), \"\\n\")\n\nDifference: 0.05"
  },
  {
    "objectID": "index.html#analytical-solution",
    "href": "index.html#analytical-solution",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "7 Analytical Solution",
    "text": "7 Analytical Solution\nThe exponential distribution has a simple analytical solution for the MLE:\n\n# The MLE formula: λ_hat = d / Σt_i\nlambda_mle_analytical &lt;- d / total_time\nll_analytical &lt;- d * log(lambda_mle_analytical) - lambda_mle_analytical * total_time\n\ncat(\"=== Analytical MLE Solution ===\\n\")\n\n=== Analytical MLE Solution ===\n\ncat(\"λ_MLE = d / Σt_i = \", d, \" / \", round(total_time, 2), \" = \", round(lambda_mle_analytical, 4), \"\\n\", sep=\"\")\n\nλ_MLE = d / Σt_i = 165 / 190.54 = 0.866\n\ncat(\"Log-likelihood:\", round(ll_analytical, 2), \"\\n\")\n\nLog-likelihood: -188.74 \n\ncat(\"\\n=== Comparison of Methods ===\\n\")\n\n\n=== Comparison of Methods ===\n\ncat(\"Grid search best λ:\", best_lambda, \"\\n\")\n\nGrid search best λ: 0.85 \n\ncat(\"Analytical MLE λ:\", round(lambda_mle_analytical, 4), \"\\n\")\n\nAnalytical MLE λ: 0.866 \n\ncat(\"Difference:\", round(abs(best_lambda - lambda_mle_analytical), 4), \"\\n\")\n\nDifference: 0.016 \n\ncat(\"\\nThe analytical solution is exact - any tiny difference is due to our grid spacing.\\n\")\n\n\nThe analytical solution is exact - any tiny difference is due to our grid spacing."
  },
  {
    "objectID": "index.html#final-comparison-visual-vs-mathematical",
    "href": "index.html#final-comparison-visual-vs-mathematical",
    "title": "Comparing Raw Survival Data to Exponential Models",
    "section": "8 Final Comparison: Visual vs Mathematical",
    "text": "8 Final Comparison: Visual vs Mathematical\n\n# Create a final comparison plot showing survival curves\nfinal_lambdas &lt;- c(0.9, best_lambda)\nfinal_labels &lt;- c(\"λ = 0.9 (Visual guess)\", paste(\"λ =\", best_lambda, \"(MLE)\"))\n\nfinal_plot_data &lt;- data.frame()\nfor(i in 1:length(final_lambdas)) {\n  temp_data &lt;- data.frame(\n    time = time_grid,\n    survival = exp(-final_lambdas[i] * time_grid),\n    model = final_labels[i]\n  )\n  final_plot_data &lt;- rbind(final_plot_data, temp_data)\n}\n\n# Create color mapping\nmle_label &lt;- paste(\"λ =\", best_lambda, \"(MLE)\")\ncolor_mapping &lt;- c(\"λ = 0.9 (Visual guess)\" = \"green\")\ncolor_mapping[mle_label] &lt;- \"red\"\n\nggplot() +\n  # Kaplan-Meier curve\n  geom_step(data = km_data, \n            aes(x = time, y = survival), \n            color = \"black\", linewidth = 2.5, alpha = 0.8) +\n  \n  # Comparison models\n  geom_line(data = final_plot_data, \n            aes(x = time, y = survival, color = model), \n            linewidth = 1.8, alpha = 0.8) +\n  \n  scale_color_manual(values = color_mapping) +\n  \n  xlim(0, 3) + ylim(0, 1) +\n  labs(\n    title = \"Visual Assessment vs Mathematical Optimum\",\n    subtitle = \"Black = Observed data (Kaplan-Meier)\",\n    x = \"Time (years)\",\n    y = \"Survival Probability\",\n    color = \"Models\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 12),\n    legend.position = \"bottom\"\n  )\n\n\n\ncat(\"\\n=== Conclusion ===\\n\")\n\n\n=== Conclusion ===\n\ncat(\"• Visual assessment (λ = 0.9) was very close to optimal!\\n\")\n\n• Visual assessment (λ = 0.9) was very close to optimal!\n\ncat(\"• Mathematical MLE gives λ =\", round(lambda_mle_analytical, 3), \"\\n\")\n\n• Mathematical MLE gives λ = 0.866 \n\ncat(\"• Both models fit the data quite well\\n\")\n\n• Both models fit the data quite well\n\ncat(\"• The likelihood plot shows a clear single peak at the MLE\\n\")\n\n• The likelihood plot shows a clear single peak at the MLE\n\n\n← Return to Course Materials\nLink to qmd (quarto markdown)"
  }
]